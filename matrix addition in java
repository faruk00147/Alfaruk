public class MatrixAddition {

    // Method to add two matrices
    public static int[][] addMatrices(int[][] A, int[][] B) {
        int m = A.length;      // Number of rows in A
        int n = A[0].length;   // Number of columns in A (and also in B)

        // Check if both matrices have the same dimensions
        if (A.length != B.length || A[0].length != B[0].length) {
            System.out.println("Matrices dimensions do not match for addition.");
            return null; // Return null if matrices can't be added
        }

        // Initialize result matrix C with dimensions m x n
        int[][] C = new int[m][n];

        // Perform matrix addition
        for (int i = 0; i < m; i++) {  // Iterate over rows
            for (int j = 0; j < n; j++) {  // Iterate over columns
                C[i][j] = A[i][j] + B[i][j];  // Add corresponding elements
            }
        }
        return C;  // Return the result matrix
    }

    // Method to print a matrix
    public static void printMatrix(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                System.out.print(matrix[i][j] + "\t");  // Print each element with tab space
            }
            System.out.println();  // Move to the next line after each row
        }
    }

    public static void main(String[] args) {
        // Example matrices A and B
        int[][] A = {
            {1, 2, 3},
            {4, 5, 6}
        };

        int[][] B = {
            {7, 8, 9},
            {10, 11, 12}
        };

        // Add matrices A and B
        int[][] result = addMatrices(A, B);

        if (result != null) {
            // Print the result matrix
            System.out.println("Result of A + B:");
            printMatrix(result);
        }
    }
}
